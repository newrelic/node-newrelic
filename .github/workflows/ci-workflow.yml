name: Node Agent CI

on:
  push:
  pull_request:
  workflow_dispatch:

env:
  # Enable versioned runner quiet mode to make CI output easier to read:
  OUTPUT_MODE: quiet

jobs:
  should_run:
    # We only want the test suites to run when code has changed, or when
    # a dependency update has occurred.
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      javascript_changed: ${{ steps.filter.outputs.javascript }}
      deps_changed: ${{ steps.deps.outputs.divergent }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36
        id: filter
        with:
          filters: |
            javascript:
              - 'api.js'
              - 'esm-loader.mjs'
              - 'index.js'
              - 'stub_api.js'
              - 'lib/**/*.{js,json,mjs,cjs}'
              - 'test/**/*.{js,json,mjs,cjs}'
      - uses: jsumners-nr/gha-node-deps-divergent@643628fe0da51ec025e984c4644f17fd9f9e93f6
        id: deps
        with:
          base-sha: ${{ github.base_ref || 'main' }}
          current-sha: ${{ github.sha }}

  lint:
    needs:
      - should_run
    if: github.event_name == 'workflow_dispatch' ||
      (needs.should_run.outputs.javascript_changed == 'true' ||
      needs.should_run.outputs.deps_changed == 'true')
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [lts/*]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies
      run: npm install
    - name: Run Linting
      run: npm run lint

  ci:
    needs:
      - should_run
    if: github.event_name == 'workflow_dispatch' ||
      (needs.should_run.outputs.javascript_changed == 'true' ||
      needs.should_run.outputs.deps_changed == 'true')
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [lts/*]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies
      run: npm install
    - name: Run CI Script Unit Tests
      run: npm run unit:scripts

  unit:
    needs:
      - should_run
    if: github.event_name == 'workflow_dispatch' ||
      (needs.should_run.outputs.javascript_changed == 'true' ||
      needs.should_run.outputs.deps_changed == 'true')
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies
      run: npm install
    - name: Run Unit Tests
      run: npm run unit
    - name: Archive Unit Test Coverage
      uses: actions/upload-artifact@v4
      with:
        name: unit-tests-${{ matrix.node-version }}
        path: ./coverage/unit/lcov.info

  integration:
    needs:
      - should_run
    if: github.event_name == 'workflow_dispatch' ||
      (needs.should_run.outputs.javascript_changed == 'true' ||
      needs.should_run.outputs.deps_changed == 'true')
    runs-on: ubuntu-latest

    env:
      NODE_NO_WARNINGS: 1

    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies
      run: npm install
    - name: Run Integration Tests
      run: npm run integration
    - name: Run ESM Integration Tests
      run: npm run integration:esm
    - name: Archive Integration Test Coverage
      uses: actions/upload-artifact@v4
      with:
        name: integration-tests-cjs-${{ matrix.node-version }}
        path: ./coverage/integration/lcov.info
    - name: Archive Integration (ESM) Test Coverage
      uses: actions/upload-artifact@v4
      with:
        name: integration-tests-esm-${{ matrix.node-version }}
        path: ./coverage/integration-esm/lcov.info

  versioned-internal:
    needs:
      - should_run
    if: github.event_name == 'workflow_dispatch' ||
      (needs.should_run.outputs.javascript_changed == 'true' ||
      needs.should_run.outputs.deps_changed == 'true')
    runs-on: ${{ github.ref == 'refs/heads/main' && vars.NR_RUNNER || 'ubuntu-latest' }}

    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies
      run: npm install
    - name: Run Docker Services
      run: npm run services
    - name: Run Versioned Tests
      run: TEST_CHILD_TIMEOUT=600000 npm run versioned:internal
      env:
        VERSIONED_MODE: ${{ github.ref == 'refs/heads/main' && '--minor' || '--major' }}
        # Run more jobs when using larger runner, otherwise 2 per CPU seems to be the sweet spot in GHA default runners(July 2022)
        JOBS: ${{ github.ref == 'refs/heads/main' && vars.NR_RUNNER && 16 ||  4 }}
        C8_REPORTER: lcovonly
    - name: Archive Versioned Test Coverage
      uses: actions/upload-artifact@v4
      with:
        name: versioned-tests-${{ matrix.node-version }}
        path: ./coverage/versioned/lcov.info
    - name: Collect docker logs on failure
      if: failure()
      uses: jwalton/gh-docker-logs@2741064ab9d7af54b0b1ffb6076cf64c16f0220e
      with:
        dest: ./logs-${{ matrix.node-version }}
    - name: Tar logs
      if: failure()
      run: tar cvzf ./logs-${{ matrix.node-version }}.tgz ./logs-${{ matrix.node-version }}
    - name: Upload logs to GitHub
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: logs-${{ matrix.node-version }}.tgz
        path: ./logs-${{ matrix.node-version }}.tgz

  # There is no coverage for external as that's tracked in their respective repos
  versioned-external:
    needs:
      - should_run
    if: github.event_name == 'workflow_dispatch' ||
      (needs.should_run.outputs.javascript_changed == 'true' ||
      needs.should_run.outputs.deps_changed == 'true')
    runs-on: ${{ github.ref == 'refs/heads/main' && vars.NR_RUNNER || 'ubuntu-latest' }}

    strategy:
      fail-fast: false
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install Dependencies
      run: npm install
    - name: Run Versioned Tests
      run: TEST_CHILD_TIMEOUT=600000 npm run versioned:external
      env:
        VERSIONED_MODE: ${{ github.ref == 'refs/heads/main' && '--minor' || '--major' }}
        # Run more jobs when using larger runner, otherwise 2 per CPU seems to be the sweet spot in GHA default runners(July 2022)
        JOBS: ${{ github.ref == 'refs/heads/main' && vars.NR_RUNNER && 16 ||  4 }}

  codecov:
    needs: [unit, integration, versioned-internal]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Post Unit Test Coverage
        uses: codecov/codecov-action@125fc84a9a348dbcf27191600683ec096ec9021c
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: unit-tests-${{ matrix.node-version }}
          flags: unit-tests-${{ matrix.node-version }}
      - name: Post Integration Test Coverage
        uses: codecov/codecov-action@125fc84a9a348dbcf27191600683ec096ec9021c
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: integration-tests-${{ matrix.node-version }}
          flags: integration-tests-${{ matrix.node-version }}
      - name: Post Versioned Test Coverage
        uses: codecov/codecov-action@125fc84a9a348dbcf27191600683ec096ec9021c
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: versioned-tests-${{ matrix.node-version }}
          flags: versioned-tests-${{ matrix.node-version }}

  all-clear:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - lint
      - ci
      - unit
      - integration
      - versioned-internal
      - versioned-external
    steps:
      - name: All checks passed
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Some checks failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
