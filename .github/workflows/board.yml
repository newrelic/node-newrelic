# This is intended to be called in any of our repos.
# To use you can look at `add-to-board.yml` as a reference.
# You should be able to just call `uses: newrelic/node-newrelic/.github/workflows/board.yml@main`
# If for some reason the "todo" or "needs pr" columns are different than the default, you can pass in
# via
# with:
#   todo_column: 'TODO Column'
#   pr_column: 'PR Column'
#
# If you do not want to add to the Node.js Engineering Board, you'll have to find the guid of the project
# by using the GitHub API
# `gh api -H "Accept: application/vnd.github.inertia-preview+json" orgs/newrelic/projects --jq ".[] | select(.name == \"<Name of Boarda>"\").id"`
#
# You can find a project via `orgs/newrelic/projects`, `repos/newrelic/<repo-name>/projects`

name: Add Issues/PRs to project board
on:
  workflow_call:
    inputs:
      project_id:
        description: Id of Project in GitHub
        default: PVT_kwDNe_vOAJMmfQ # Node.js Engineering Board https://github.com/orgs/newrelic/projects/105 
        required: false
        type: number
      todo_column:
        description: Name of the To-Do column in project
        default: 'Triage Needed: Unprioritized Features'
        required: false
        type: string
      pr_column:
        description: Name of the In Review column in project
        default: 'Needs PR Review'
        required: false
        type: string
    # Cannot rely on environment secrets(i.e. from node-newrelic settings)
    # in a reusable workflow.  We must pass it in, see add-to-board.yml
    # See: https://github.community/t/reusable-workflows-secrets-and-environments/203695/4
    secrets:
      gh_token:
        description: Token used to make gh api calls, must have org level perms
        required: true

jobs:
  assign_to_project:
    env:
      # Cannot use `secrets.GITHUB_TOKEN` because the project board
      # exists at org level. You cannot add permissions outside the scope
      # of the given repo
      GITHUB_TOKEN: ${{ secrets.gh_token }}
      PROJECT_ID: ${{ inputs.project_id }}
      HEADER: "Accept: application/vnd.github.inertia-preview+json"
    runs-on: ubuntu-latest
    name: Assign Issues and/or PRs to Project
    steps:
    - name: Assign PR to Project
      if: github.event_name == 'pull_request_target'
      run: |
        PR_ID=${{ github.event.pull_request.id }}
        COLUMN=$(gh api -H "$HEADER" projects/$PROJECT_ID/columns --jq ".[] | select(.name == \"$COLUMN_NAME\").id")
        gh api -H "$HEADER" -X POST projects/columns/$COLUMN/cards -f content_type='PullRequest' -F content_id=$PR_ID
      env:
        COLUMN_NAME: ${{ inputs.pr_column}}
    - name: Assign Issue to Project
      if: github.event_name == 'issues'
      run: |
        ISSUE_ID=${{ github.event.issue.id }}
        COLUMN=$(gh api -H "$HEADER" projects/$PROJECT_ID/columns --jq ".[] | select(.name == \"$COLUMN_NAME\").id")
        gh api -H "$HEADER" -X POST projects/columns/$COLUMN/cards -f content_type='Issue' -F content_id=$ISSUE_ID
      env:
        COLUMN_NAME: ${{ inputs.todo_column}}
