name: Reusable Create Release

on:
  workflow_call:
    inputs:
      changelog_file:
        description: Name of changelog file.
        type: string
        required: false
        default: NEWS.md
      workflows:
        description: Comma-delimited list of workflows to check
        type: string
        required: false
        default: ci-workflow.yml
    secrets:
      # Cannot rely on environment secrets(i.e. from node-newrelic settings or org level)
      # in a reusable workflow.  We must pass it in, see create-release.yml
      # See: https://github.community/t/reusable-workflows-secrets-and-environments/203695/4
      npm_token:
        description: Auth token to publish to npm registry
        required: true

jobs:
  tag-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*]

    steps:
    # Check out caller repo
    - uses: actions/checkout@v3
    # check out agent repo to agent-repo for the bin folders
    - uses: actions/checkout@v3
      with:
        repository: newrelic/node-newrelic
        path: agent-repo
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'
    # Only need to install deps in agent-repo because of the bin scripts
    - name: Install Dependencies
      run: |
        # Install deps in caller repo
        npm install
        # Install deps in agent repo
        npm install --prefix agent-repo
    - name: Setup GitHub Credentials
      run: |
        git config user.name $GITHUB_ACTOR
        git config user.email gh-actions-${GITHUB_ACTOR}@github.com
    - name: Create Release Tag
      run: node ./agent-repo/bin/create-release-tag.js --branch ${{ github.ref }} --repo ${{ github.repository }} --workflows ${{ inputs.workflows }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish to Npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
    - name: Get Created Tag
      id: get_tag
      run: echo "latest_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
    - name: Create GitHub Release
      run: node ./agent-repo/bin/create-github-release.js --tag ${{ steps.get_tag.outputs.latest_tag }} --repo ${{ github.repository }} --changelog ${{ inputs.changelog_file }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

